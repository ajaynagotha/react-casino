{"version":3,"sources":["reportWebVitals.js","services/trackResults.js","components/InfoModal.js","components/ListResults.js","App.js","components/Footer.js","components/Header.js","components/Layout.js","config/Splits.js","config/Streets.js","config/Corners.js","config/Lines.js","images/delete.png","components/SelectedFilters.js","config/Singles.js","config/CasinoList.js","components/SelectedCasino.js","actions/index.js","components/Options.js","routes/routes.js","reducers/index.js","reducers/reducer-active-filters.js","reducers/reducer-selected-casino.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","trackResults","a","Promise","resolve","reject","axios","get","res","console","log","data","catch","err","InfoModal","props","blackNumbers","redNumbers","Modal","show","onHide","size","aria-labelledby","centered","Header","closeButton","className","Title","id","casino","Body","table","result","split","map","Badge","includes","Number","Footer","style","float","href","ListResults","setModalShow","setState","modalShow","selectedCasino","selectedTable","name","selectedResult","results","join","setModalHide","state","CurrentResults","Container","JSON","stringify","this","casinos","Tabs","defaultActiveKey","Tab","eventKey","title","Row","Col","lg","onClick","e","Card","Img","variant","src","Text","filter","idx","Component","connect","filters","activeFilter","App","Nav","Item","Link","as","to","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","Layout","children","Splits","Streets","value","Corners","Lines","SelectedFilters","removeFilter","removeit","sfilters","tfilters","parse","key","push","Array","isArray","del","alt","width","Singles","CasinoList","SelectedCasino","removeCasino","scasinos","saveFilters","type","payload","saveCasino","Options","fl","casinoList","rmindex","findIndex","splice","length","currentFilters","x","undefined","addCasino","cArr","target","getAttribute","handleChange","iobj","Form","FormGroup","Check","custom","inline","label","onChange","Label","htmlFor","Control","single","vslue","street","corner","line","FormLabel","FormControl","placeholder","Button","Dropdown","Menu","data-casino","data-link","dispatch","bindActionCreators","Routes","exact","path","component","allReducers","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"+IAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,gKCNDQ,EAAY,uCAAG,sBAAAC,EAAA,+EACjB,IAAIC,SAAQ,SAACC,EAASC,GACzBC,IAAMC,IAAI,8BAA8BZ,MAAK,SAACa,GAC1CC,QAAQC,IAAI,oBACZN,EAAQI,EAAIG,SACbC,OAAM,SAACC,GACNR,EAAO,+BANS,2CAAH,qD,gBCAZS,EAAY,SAACC,GACtB,IAAMC,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAChFC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnF,OACI,eAACC,EAAA,EAAD,CACIC,KAAMJ,EAAMI,KACZC,OAAQL,EAAMK,OACdC,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EALZ,UAOI,cAACL,EAAA,EAAMM,OAAP,CAAcC,aAAW,EAACC,UAAU,sBAApC,SACI,cAACR,EAAA,EAAMS,MAAP,CAAaC,GAAG,gCAAhB,SACKb,EAAMc,WAGf,eAACX,EAAA,EAAMY,KAAP,CAAYJ,UAAU,YAAtB,UACI,oBAAIA,UAAU,aAAd,SAA4BX,EAAMgB,QAClC,mBAAGL,UAAU,aAAb,8BAGA,qBAAKA,UAAU,WAAf,SAEIX,EAAMiB,OAAOC,MAAM,KAAKC,KAAI,SAACF,GACzB,OAAQ,cAACG,EAAA,EAAD,CAAOT,UAAYV,EAAaoB,SAASC,OAAOL,IAAY,kBAAqBf,EAAWmB,SAASC,OAAOL,IAAY,gBAAsC,IAAnBK,OAAOL,GAAiB,kBAAoB,MAAvL,SAA+LA,YAKnN,cAACd,EAAA,EAAMoB,OAAP,CAAcZ,UAAU,YAAxB,SACA,mBAAGa,MAAO,CAACC,MAAO,SAAUC,KAAK,KAAKf,UAAU,aAAhD,gC,QC1BNgB,E,kDACF,aAAe,IAAD,8BACV,gBAiBJC,aAAe,SAACX,GACZ,EAAKY,SAAS,CAAEC,WAAW,EAAMC,eAAgB,sBAAuBC,cAAef,EAAOgB,KAAMC,eAAiBjB,EAAOkB,QAAQC,UAnB1H,EAqBdC,aAAe,WACX,EAAKR,SAAS,CAAEC,WAAW,KApB3B,EAAKQ,MAAQ,CACTC,eAAgB,GAChBT,WAAW,EACXC,eAAgB,IAChBC,cAAe,IACfE,eAAgB,IAChBjC,aAAc,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/EC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KATtE,E,qDAYd,WAAqB,IAAD,OAChBhB,IAAeN,MAAK,SAACa,GACjBC,QAAQC,IAAI,UAAWF,GACvB,EAAKoC,SAAS,CAAEU,eAAgB9C,S,oBASxC,WAAU,IAAD,OACL,OACI,eAAC+C,EAAA,EAAD,CAAW7B,UAAU,cAArB,UACK8B,KAAKC,UAAUC,KAAK3C,MAAM4C,SAC3B,eAACC,EAAA,EAAD,CAAMC,iBAAiB,eAAejC,GAAG,cAAzC,UACI,cAACkC,EAAA,EAAD,CAAKC,SAAS,eAAeC,MAAM,eAAnC,SACI,eAACC,EAAA,EAAD,WAEQP,KAAKL,MAAMC,eAAepB,KAAI,SAACF,GAC3B,OACI,cAACkC,EAAA,EAAD,CAAKC,GAAG,IAAIC,QAAS,SAACC,GAAD,OAAO,EAAK1B,aAAaX,IAA9C,SACI,eAACsC,EAAA,EAAD,CAAM5C,UAAU,cAAhB,UACI,cAAC4C,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAI,6GAC5B,eAACH,EAAA,EAAKxC,KAAN,WACI,cAACwC,EAAA,EAAK3C,MAAN,CAAYD,UAAU,aAAtB,SAAoCM,EAAOgB,OAC3C,cAACsB,EAAA,EAAKI,KAAN,CAAWhD,UAAU,gBAArB,SAEQM,EAAOkB,QAAQyB,QAAO,SAAC3C,EAAQ4C,GAAT,OAAiBA,EAAM,KAAG1C,KAAI,SAACF,GACjD,OAAQ,cAACG,EAAA,EAAD,CAAOT,UAAY,EAAK2B,MAAMrC,aAAaoB,SAASC,OAAOL,IAAY,mBAAsB,EAAKqB,MAAMpC,WAAWmB,SAASC,OAAOL,IAAY,iBAAuC,IAAnBK,OAAOL,GAAiB,mBAAqB,OAAhN,SAAyNA,SAI7O,cAACsC,EAAA,EAAKI,KAAN,CAAWhD,UAAU,gBAArB,SAEQM,EAAOkB,QAAQyB,QAAO,SAAC3C,EAAQ4C,GAAT,OAAkBA,EAAM,GAAKA,EAAM,MAAK1C,KAAI,SAACF,GAC/D,OAAQ,cAACG,EAAA,EAAD,CAAQT,UAAY,EAAK2B,MAAMrC,aAAaoB,SAASC,OAAOL,IAAY,mBAAsB,EAAKqB,MAAMpC,WAAWmB,SAASC,OAAOL,IAAY,iBAAuC,IAAnBK,OAAOL,GAAiB,mBAAqB,OAAjN,SAA0NA,cAdnNA,EAAOJ,SAwB1D,cAAC,EAAD,CACIC,OAAQ6B,KAAKL,MAAMP,eACnBf,MAAO2B,KAAKL,MAAMN,cAClBf,OAAQ0B,KAAKL,MAAMJ,eACnB9B,KAAMuC,KAAKL,MAAMR,UACjBzB,OAAQ,kBAAM,EAAKgC,cAAa,WAI5C,cAACU,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,WAE7B,cAACF,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,qB,GAvEvBa,aAoFXC,mBANf,SAAyBzB,GACrB,MAAO,CACH0B,QAAS1B,EAAM2B,aACfrB,QAASN,EAAMP,kBAGRgC,CAAyBpC,GCtFnBuC,E,4JACnB,WACE,OACE,qBAAKvD,UAAU,OAAf,SACE,cAAC,EAAD,U,GAJyBmD,a,QCElB,SAASvC,IACpB,OACI,wBAAQV,GAAG,cAAX,SACI,eAACsD,EAAA,EAAD,CAAKxD,UAAU,aAAf,UACI,cAACwD,EAAA,EAAIC,KAAL,UAAU,cAACD,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,mBAAvB,wBACV,cAACJ,EAAA,EAAIC,KAAL,UAAU,cAACD,EAAA,EAAIE,KAAL,wBACV,cAACF,EAAA,EAAIC,KAAL,UAAU,cAACD,EAAA,EAAIE,KAAL,qBACV,cAACF,EAAA,EAAIC,KAAL,UAAU,cAACD,EAAA,EAAIE,KAAL,0B,aCTX,SAAS5D,IACpB,OACI,8BACI,wBAAQI,GAAG,cAAX,SACI,cAAC2D,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAK/D,UAAU,WAAW8C,QAAQ,OAAlE,SACI,eAACjB,EAAA,EAAD,WACA,cAACgC,EAAA,EAAOG,MAAR,CAAcL,GAAID,IAAME,GAAG,IAA3B,oBACA,cAACC,EAAA,EAAOI,OAAR,CAAeC,gBAAc,0BAC7B,cAACL,EAAA,EAAOM,SAAR,CAAiBjE,GAAG,wBAApB,SACI,eAACsD,EAAA,EAAD,CAAKxD,UAAU,UAAf,UACI,cAACwD,EAAA,EAAIE,KAAL,CAAU3C,KAAK,YAAf,sBACA,cAACyC,EAAA,EAAIE,KAAL,CAAU3C,KAAK,WAAf,mBACA,cAACyC,EAAA,EAAIE,KAAL,CAAU3C,KAAK,YAAf,qBACA,cAACyC,EAAA,EAAIE,KAAL,CAAU3C,KAAK,WAAf,iC,ICZPqD,E,4JACjB,WACI,OACI,sBAAKlE,GAAG,OAAR,UACI,cAACJ,EAAD,IACEkC,KAAK3C,MAAMgF,SACb,cAACzD,EAAD,W,GANoBuC,a,0DCqDrBmB,EAzDA,CACX,CAAC/D,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,YACR,CAACA,MAAO,WACR,CAACA,MAAO,YACR,CAACA,MAAO,YACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,cCzCGgE,EAdC,CACZ,CAACC,MAAO,SACR,CAACA,MAAO,SACR,CAACA,MAAO,SACR,CAACA,MAAO,YACR,CAACA,MAAO,YACR,CAACA,MAAO,YACR,CAACA,MAAO,YACR,CAACA,MAAO,YACR,CAACA,MAAO,YACR,CAACA,MAAO,YACR,CAACA,MAAO,YACR,CAACA,MAAO,aCWGC,EAvBC,CACZ,CAACD,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,aACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,gBCRGE,EAbD,CACV,CAACF,MAAO,eACR,CAACA,MAAO,eACR,CAACA,MAAO,kBACR,CAACA,MAAO,qBACR,CAACA,MAAO,qBACR,CAACA,MAAO,qBACR,CAACA,MAAO,qBACR,CAACA,MAAO,qBACR,CAACA,MAAO,qBACR,CAACA,MAAO,qBACR,CAACA,MAAO,sBCXG,MAA0B,mCCGpBG,E,kDACjB,a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","file":"static/js/main.12d4176f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\r\nexport const trackResults = async () => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get('http://localhost:4000/data').then((res) => {\r\n            console.log(\"tracking results\")\r\n            resolve(res.data);\r\n        }).catch((err) => {\r\n            reject(\"something went rwong\")\r\n        })\r\n    })\r\n}","import { Modal, Badge } from \"react-bootstrap\";\r\nexport const InfoModal = (props) => {\r\n    const blackNumbers = [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35]\r\n    const redNumbers = [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36]\r\n    return (\r\n        <Modal\r\n            show={props.show}\r\n            onHide={props.onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton className='bg-first text-white'>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {props.casino}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='bg-second'>\r\n                <h5 className='text-white'>{props.table}</h5>\r\n                <p className='text-white'>\r\n                    Tracking Result:\r\n                </p>\r\n                <div className='clearfix'>\r\n                    {\r\n                    props.result.split(',').map((result) => {\r\n                        return (<Badge className={(blackNumbers.includes(Number(result))) ? \"badge-black m-1\" : (redNumbers.includes(Number(result))) ? \"badge-red m-1\" : (Number(result) === 0) ? \"badge-green m-1\" : \"m-1\"}>{result}</Badge>)\r\n                    })\r\n                }\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer className='bg-second'>\r\n            <a style={{float: \"right\"}} href='/#' className=\"btn cs-btn\">Visit Casino</a>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container, Card, Row, Col, Badge, Tabs, Tab } from 'react-bootstrap';\r\nimport { trackResults } from '../services/trackResults'\r\nimport { InfoModal } from './InfoModal';\r\nimport {connect} from 'react-redux';\r\nclass ListResults extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            CurrentResults: [],\r\n            modalShow: false,\r\n            selectedCasino: \" \",\r\n            selectedTable: \" \",\r\n            selectedResult: \" \",\r\n            blackNumbers: [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35],\r\n            redNumbers: [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        trackResults().then((res) => {\r\n            console.log(\"results\", res)\r\n            this.setState({ CurrentResults: res })\r\n        })\r\n    }\r\n    setModalShow = (result) => {\r\n        this.setState({ modalShow: true, selectedCasino: \"William Hill Casino\", selectedTable: result.name, selectedResult:  result.results.join()})\r\n    }\r\n    setModalHide = () => {\r\n        this.setState({ modalShow: false })\r\n    }\r\n    render() {\r\n        return (\r\n            <Container className=\"result-list\">\r\n                {JSON.stringify(this.props.casinos)}\r\n                <Tabs defaultActiveKey=\"william-hill\" id=\"casino-tabs\">\r\n                    <Tab eventKey=\"william-hill\" title=\"William Hill\">\r\n                        <Row>\r\n                            {\r\n                                this.state.CurrentResults.map((result) => {\r\n                                    return (\r\n                                        <Col lg='3' onClick={(e) => this.setModalShow(result)}>\r\n                                            <Card className='mb-3 shadow' key={result.id}>\r\n                                                <Card.Img variant=\"top\" src=\"https://cmscdn.staticcache.org/assets/image/0010/1482715/WHC_40604_GT_EvolutionRouletteLobby_372x372.jpg\" />\r\n                                                <Card.Body>\r\n                                                    <Card.Title className='text-white'>{result.name}</Card.Title>\r\n                                                    <Card.Text className='clearfix mb-1'>\r\n                                                        {\r\n                                                            result.results.filter((result, idx) => idx < 5).map((result) => {\r\n                                                                return (<Badge className={(this.state.blackNumbers.includes(Number(result))) ? \"badge-black mx-1\" : (this.state.redNumbers.includes(Number(result))) ? \"badge-red mx-1\" : (Number(result) === 0) ? \"badge-green mx-1\" : \"mx-1\"}>{result}</Badge>)\r\n                                                            })\r\n                                                        }\r\n                                                    </Card.Text>\r\n                                                    <Card.Text className='clearfix mb-1'>\r\n                                                        {\r\n                                                            result.results.filter((result, idx) => (idx > 5 && idx < 11)).map((result) => {\r\n                                                                return (<Badge  className={(this.state.blackNumbers.includes(Number(result))) ? \"badge-black mx-1\" : (this.state.redNumbers.includes(Number(result))) ? \"badge-red mx-1\" : (Number(result) === 0) ? \"badge-green mx-1\" : \"mx-1\"}>{result}</Badge>)\r\n                                                            })\r\n                                                        }\r\n                                                    </Card.Text>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <InfoModal\r\n                                casino={this.state.selectedCasino}\r\n                                table={this.state.selectedTable}\r\n                                result={this.state.selectedResult}\r\n                                show={this.state.modalShow}\r\n                                onHide={() => this.setModalHide(false)}\r\n                            />\r\n                        </Row>\r\n                    </Tab>\r\n                    <Tab eventKey=\"bet365\" title=\"Bet365\">\r\n                    </Tab>\r\n                    <Tab eventKey=\"roobet\" title=\"RooBet\">\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        filters: state.activeFilter,\r\n        casinos: state.selectedCasino\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(ListResults);\r\n","import React, { Component } from 'react'\nimport './App.css'\nimport ListResults from './components/ListResults';\nexport default class App extends Component {\n  render() {\n    return (\n      <div className='py-5'>\n        <ListResults />\n      </div>\n    )\n  }\n}\n\n","\r\nimport React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n \r\nexport default function Footer() {\r\n    return (\r\n        <footer id=\"site-footer\">\r\n            <Nav className=\"footer-nav\">\r\n                <Nav.Item><Nav.Link as={Link} to='tracking-options'>Tracking</Nav.Link></Nav.Item>\r\n                <Nav.Item><Nav.Link>Options</Nav.Link></Nav.Item>\r\n                <Nav.Item><Nav.Link>Home</Nav.Link></Nav.Item>\r\n                <Nav.Item><Nav.Link>Help</Nav.Link></Nav.Item>\r\n            </Nav>\r\n        </footer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Header() {\r\n    return (\r\n        <div>\r\n            <header id='site-header'>\r\n                <Navbar collapseOnSelect expand=\"lg\" className='main-nav' variant='dark'>\r\n                    <Container>\r\n                    <Navbar.Brand as={Link} to='/'>Casino</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link href=\"#features\">Products</Nav.Link>\r\n                            <Nav.Link href=\"#pricing\">Blogs</Nav.Link>\r\n                            <Nav.Link href=\"#features\">Support</Nav.Link>\r\n                            <Nav.Link href=\"#pricing\">Login</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\n\r\nexport default class Layout extends Component {\r\n    render() {\r\n        return (\r\n            <div id='page'>\r\n                <Header />\r\n                { this.props.children }\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const Splits = [\r\n    {split: \"1 and 2\"},\r\n    {split: \"1 and 4\"},\r\n    {split: \"2 and 3\"},\r\n    {split: \"2 and 5\"},\r\n    {split: \"3 and 6\"},\r\n    {split: \"4 and 5\"},\r\n    {split: \"4 and 7\"},\r\n    {split: \"5 and 6\"},\r\n    {split: \"5 and 8\"},\r\n    {split: \"6 and 9\"},\r\n    {split: \"7 and 8\"},\r\n    {split: \"7 and 10\"},\r\n    {split: \"8 and 9\"},\r\n    {split: \"8 and 11\"},\r\n    {split: \"9 and 12\"},\r\n    {split: \"10 and 11\"},\r\n    {split: \"10 and 13\"},\r\n    {split: \"11 and 12\"},\r\n    {split: \"11 and 14\"},\r\n    {split: \"13 and 14\"},\r\n    {split: \"13 and 16\"},\r\n    {split: \"14 and 15\"},\r\n    {split: \"14 and 17\"},\r\n    {split: \"15 and 18\"},\r\n    {split: \"16 and 17\"},\r\n    {split: \"16 and 19\"},\r\n    {split: \"17 and 18\"},\r\n    {split: \"17 and 20\"},\r\n    {split: \"18 and 21\"},\r\n    {split: \"19 and 20\"},\r\n    {split: \"19 and 22\"},\r\n    {split: \"20 and 21\"},\r\n    {split: \"20 and 23\"},\r\n    {split: \"21 and 24\"},\r\n    {split: \"22 and 23\"},\r\n    {split: \"22 and 25\"},\r\n    {split: \"23 and 24\"},\r\n    {split: \"23 and 26\"},\r\n    {split: \"24 and 27\"},\r\n    {split: \"25 and 28\"},\r\n    {split: \"26 and 27\"},\r\n    {split: \"26 and 29\"},\r\n    {split: \"27 and 30\"},\r\n    {split: \"28 and 29\"},\r\n    {split: \"28 and 31\"},\r\n    {split: \"29 and 30\"},\r\n    {split: \"29 and 32\"},\r\n    {split: \"30 and 33\"},\r\n    {split: \"31 and 32\"},\r\n    {split: \"31 and 34\"},\r\n    {split: \"32 and 33\"},\r\n    {split: \"32 and 35\"},\r\n    {split: \"33 and 36\"},\r\n    {split: \"34 and 35\"},\r\n    {split: \"35 and 36\"}\r\n]\r\nexport default Splits","const Streets = [\r\n    {value: \"1-2-3\"},\r\n    {value: \"4-5-6\"},\r\n    {value: \"7-8-9\"},\r\n    {value: \"10-11-12\"},\r\n    {value: \"13-14-15\"},\r\n    {value: \"16-17-18\"},\r\n    {value: \"19-20-21\"},\r\n    {value: \"22-23-24\"},\r\n    {value: \"25-26-27\"},\r\n    {value: \"28-29-30\"},\r\n    {value: \"31-32-33\"},\r\n    {value: \"34-35-36\"}\r\n]\r\nexport default Streets","const Corners = [\r\n    {value: \"1-2-4-5\"},\r\n    {value: \"2-3-5-6\"},\r\n    {value: \"4-5-7-8\"},\r\n    {value: \"5-6-8-9\"},\r\n    {value: \"7-8-10-11\"},\r\n    {value: \"8-9-11-12\"},\r\n    {value: \"10-11-13-14\"},\r\n    {value: \"11-12-14-15\"},\r\n    {value: \"13-14-16-17\"},\r\n    {value: \"14-15-17-18\"},\r\n    {value: \"16-17-19-20\"},\r\n    {value: \"17-18-20-21\"},\r\n    {value: \"19-20-22-23\"},\r\n    {value: \"20-21-23-24\"},\r\n    {value: \"22-23-25-26\"},\r\n    {value: \"23-24-26-27\"},\r\n    {value: \"26-27-29-30\"},\r\n    {value: \"28-29-31-32\"},\r\n    {value: \"29-30-32-33\"},\r\n    {value: \"31-32-34-35\"},\r\n    {value: \"32-33-35-36\"}\r\n]\r\nexport default Corners","const Lines = [\r\n    {value: \"1-2-3-4-5-6\"},\r\n    {value: \"4-5-6-7-8-9\"},\r\n    {value: \"7-8-9-10-11-12\"},\r\n    {value: \"10-11-12-13-14-15\"},\r\n    {value: \"13-14-15-16-17-18\"},\r\n    {value: \"16-17-18-19-20-21\"},\r\n    {value: \"19-20-21-22-23-24\"},\r\n    {value: \"22-23-24-25-26-27\"},\r\n    {value: \"25-26-27-28-29-30\"},\r\n    {value: \"28-29-30-31-32-33\"},\r\n    {value: \"31-32-33-34-35-36\"}\r\n]\r\nexport default Lines","export default __webpack_public_path__ + \"static/media/delete.85b48406.png\";","import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport del from '../images/delete.png'\r\nexport default class SelectedFilters extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            sfilters: ''\r\n        }\r\n    }\r\n    removeFilter = filter => {\r\n        this.props.removeit(filter)\r\n    }\r\n    render() {\r\n        var filters = []\r\n        var tfilters = JSON.parse(this.props.filters);\r\n        for (var key in tfilters) {\r\n            filters.push(tfilters[key])\r\n        }\r\n        console.log(\"filters\", Array.isArray(filters[1]))\r\n        return (\r\n            <div className='selected-filters'>\r\n                <h3 className=\"text-white\">Selected Options</h3>\r\n                {\r\n                    filters.map((filter, idx) => (\r\n                        Array.isArray(filter) ?\r\n                            ( filter.map((filter, idx) => (  \r\n                                <Card className='d-inline-block filter-card'>\r\n                                    <Card.Body className='text-white filter-body clearfix'>\r\n                                        <div className=\"float-left\" key = {filter}>{filter}</div>\r\n                                        <div className='float-right ml-3 removef' onClick={e => this.removeFilter(filter)}><img src={del} alt=\"del\" width='12px'></img></div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            ))) :\r\n                            (<Card className='d-inline-block filter-card'>\r\n                                <Card.Body className='text-white filter-body clearfix'>\r\n                                    <div className=\"float-left\" key={filter}>{filter}</div>\r\n                                    <div className='float-right ml-3 removef' onClick={e => this.removeFilter(filter)}><img src={del} alt=\"delete\" width='12px'></img></div>\r\n                                </Card.Body>\r\n                            </Card>)\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const Singles = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]\r\nexport default Singles\r\n","export const CasinoList = [\n    \"10bet\",\n    \"12bet\",\n    \"888 casino\",\n    \"Bwin\", \n    \"Betvictor\",\n    \"Betfair\",\n    \"Bet365\",\n    \"Betfed\",\n    \"Pokerstars\",\n    \"Betway\",\n    \"BoyleSports\",\n    \"Coral\",\n    \"Gentingbet\",\n    \"Ladbrokes\",\n    \"Marathon Bet\",\n    \"PaddyPower\",\n    \"Skybet\",\n    \"Unitbet\",\n    \"Leovegas\",\n    \"Play.ee\"\n]","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\nimport del from '../images/delete.png'\nexport default class SelectedCasino extends Component {\n    constructor() {\n        super()\n        this.state = {\n            scasinos: []\n        }\n    }\n    removeCasino = casino => {\n        this.props.removeit(casino)\n    }\n    componentDidMount() {\n        var casinos = this.props.casinos\n        casinos = casinos.split(\",\")\n        this.setState({scasinos: casinos})\n    }\n    render() {\n        return (\n            <div className='selected-casino'>\n                <h3 className=\"text-white\">Selected Casinos</h3>\n                {\n                    (this.props.casinos !== '') ? (this.props.casinos.split(\",\").map((casino, idx) => (\n                        <Card className='d-inline-block casino-card'>\n                            <Card.Body className='text-white casino-body clearfix'>\n                                <div className=\"float-left\" key={casino}>{casino}</div>\n                                <div className='float-right ml-3 removef' onClick={e => this.removeCasino(casino)}><img src={del} alt=\"del\" width='12px'></img></div>\n                            </Card.Body>\n                        </Card> \n                    ))) : \"\"\n                }\n            </div>\n        )\n    }\n}\n","export const saveFilters = (filter) =>{\n    console.log(\"selected filters\")\n    return {\n        type: \"SELECTED_FILTERS\",\n        payload: filter\n    }\n}\nexport const saveCasino = (filter) =>{\n    console.log(\"selected filters\")\n    return {\n        type: \"SELECTED_CASINO\",\n        payload: filter\n    }\n}\n\n","import React, { Component } from 'react'\r\nimport { Container, Form, FormGroup, Tabs, Tab, Row, Col, FormLabel, FormControl, Button, Dropdown } from 'react-bootstrap'\r\nimport Splits from '../config/Splits'\r\nimport Streets from '../config/Streets'\r\nimport Corners from '../config/Corners'\r\nimport Lines from '../config/Lines'\r\nimport SelectedFilters from './SelectedFilters'\r\nimport Singles from '../config/Singles'\r\nimport { CasinoList } from '../config/CasinoList'\r\nimport SelectedCasino from './SelectedCasino'\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {saveCasino, saveFilters} from '../actions/index'\r\nclass Options extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            currentFilters: '',\r\n            casinoList: []\r\n        }\r\n    }\r\n    removeCasino = async (filter) => {\r\n        var fl = this.state.casinoList;\r\n        if (fl.includes(filter)) {\r\n            var rmindex = fl.findIndex(value => {\r\n                return value === filter\r\n            })\r\n            fl.splice(rmindex, 1)\r\n            if (fl.length === 0) {\r\n                fl = [];\r\n            }\r\n            await this.setState({ currentFilters: fl })\r\n        }\r\n    }\r\n    removeFilter = async (filter) => {\r\n        var fl = this.state.currentFilters;\r\n        for (const x in fl) {\r\n            if ((Array.isArray(fl[x])) && fl[x].includes(filter)) {\r\n                var rmindex = fl[x].findIndex(value => {\r\n                    return value === filter\r\n                })\r\n                fl[x].splice(rmindex, 1)\r\n                if (fl[x].length === 0) {\r\n                    fl[x] = undefined;\r\n                }\r\n                await this.setState({ currentFilters: fl })\r\n            }\r\n            if (fl[x] === filter) {\r\n                fl[x] = undefined;\r\n                await this.setState({ currentFilters: fl })\r\n            }\r\n        }\r\n    }\r\n    addCasino = async (e) => {\r\n        var cArr = this.state.casinoList;\r\n        if (!cArr.includes(e.target.getAttribute(\"data-casino\"))) {\r\n            cArr.push(e.target.getAttribute(\"data-casino\"));\r\n            await this.setState({ casinoList: cArr })\r\n            console.log(JSON.stringify(this.state.casinoList))\r\n            this.props.saveCasino(this.state.casinoList);\r\n        }\r\n    }\r\n    handleChange = async (e) => {\r\n        if ((e.target.name === \"singles\") || (e.target.name === \"streets\") || (e.target.name === \"corners\") || (e.target.name === \"lines\") || (e.target.name === \"corners\") || (e.target.name === \"splits\")) {\r\n            console.log(e.target.value)\r\n            var iobj = { ...this.state.currentFilters }\r\n            if (!iobj[e.target.name]) {\r\n                iobj[e.target.name] = []\r\n            }\r\n            iobj[e.target.name].push(e.target.value);\r\n            await this.setState({ currentFilters: iobj })\r\n            console.log(JSON.stringify(this.state.currentFilters))\r\n        }\r\n        else {\r\n            iobj = { ...this.state.currentFilters }\r\n            iobj[e.target.name] = e.target.value;\r\n            await this.setState({ currentFilters: iobj })\r\n            console.log(JSON.stringify(this.state.currentFilters))\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Container className=\"tracking-page py-5\">\r\n                <Tabs defaultActiveKey=\"options\" id=\"casino-tabs\" className=\"justify-content-center\">\r\n                    <Tab eventKey=\"options\" title=\"Options\">\r\n                        <SelectedFilters filters={JSON.stringify(this.state.currentFilters)} removeit={this.removeFilter} />\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='even'\r\n                                    label='Even'\r\n                                    value='Even'\r\n                                    name='evenodd'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='odd'\r\n                                    label='Odd'\r\n                                    name='evenodd'\r\n                                    value='odd'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='red'\r\n                                    label='Red'\r\n                                    name='redblack'\r\n                                    value='Red'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='black'\r\n                                    label='Black'\r\n                                    name='redblack'\r\n                                    value='Black'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='1stdozen'\r\n                                    label='1st Dozen'\r\n                                    name='dozens'\r\n                                    value='1st Dozen'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='2nddozen'\r\n                                    label='2nd Dozen'\r\n                                    name='dozens'\r\n                                    value='2nd Dozen'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='3rddozen'\r\n                                    label='3rd Dozen'\r\n                                    value='3rd Dozen'\r\n                                    name='dozens'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='1stcolumn'\r\n                                    label='1st Column'\r\n                                    value='1st Column'\r\n                                    name='columns'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='2ndcolumn'\r\n                                    label='2nd Column'\r\n                                    value='2nd Column'\r\n                                    name='columns'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='3rdcolumn'\r\n                                    label='3rd Column'\r\n                                    value='3rd Column'\r\n                                    name='columns'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Label inline className=\"my-1 mr-2 text-white\" htmlFor=\"inlineFormCustomSelectPref\">\r\n                                            Singles\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"my-1 mr-sm-2\"\r\n                                            id=\"singles\"\r\n                                            onChange={(e) => this.handleChange(e)}\r\n                                            name=\"singles\"\r\n                                            custom\r\n                                            inline\r\n                                        >\r\n                                            {Singles.map((single) => {\r\n                                                return (<option key={single} value={single}>{single}</option>)\r\n                                            })}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label inline className=\"my-1 mr-2 text-white\" htmlFor=\"inlineFormCustomSelectPref\">\r\n                                            Splits\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"my-1 mr-sm-2\"\r\n                                            id=\"splits\"\r\n                                            onChange={(e) => this.handleChange(e)}\r\n                                            name=\"splits\"\r\n                                            custom\r\n                                            inline\r\n                                        >\r\n                                            {\r\n                                                Splits.map((split) => {\r\n                                                    return (<option key={split.split} vslue={split.split}>{split.split}</option>)\r\n                                                })\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label inline className=\"my-1 mr-2 text-white\" htmlFor=\"inlineFormCustomSelectPref\">\r\n                                            streets\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"my-1 mr-sm-2\"\r\n                                            id=\"streets\"\r\n                                            onChange={(e) => this.handleChange(e)}\r\n                                            name=\"streets\"\r\n                                            custom\r\n                                            inline\r\n                                        >\r\n                                            {\r\n                                                Streets.map((street) => {\r\n                                                    return (<option key={street.value} value={street.value}>{street.value}</option>)\r\n                                                })\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label inline className=\"my-1 mr-2 text-white\" htmlFor=\"inlineFormCustomSelectPref\">\r\n                                            Corners\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"my-1 mr-sm-2\"\r\n                                            id=\"corners\"\r\n                                            onChange={(e) => this.handleChange(e)}\r\n                                            name=\"corners\"\r\n                                            custom\r\n                                            inline\r\n                                        >\r\n                                            {\r\n                                                Corners.map((corner) => {\r\n                                                    return (<option key={corner.value} value={corner.value}>{corner.value}</option>)\r\n                                                })\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label inline className=\"my-1 mr-2 text-white\" htmlFor=\"inlineFormCustomSelectPref\">\r\n                                            Lines\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"my-1 mr-sm-2\"\r\n                                            id=\"lines\"\r\n                                            onChange={(e) => this.handleChange(e)}\r\n                                            name=\"lines\"\r\n                                            custom\r\n                                            inline\r\n                                        >\r\n                                            {\r\n                                                Lines.map((line) => {\r\n                                                    return (<option key={line.value} value={line.value}>{line.value}</option>)\r\n                                                })\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormLabel className=\"text-white\">Notifications</FormLabel>\r\n                                <div className='clearfix'>\r\n                                    <FormLabel className=\"text-white inline-block\">Number of times in a row</FormLabel>\r\n                                    <FormControl type='text' className='inline-block mx-3 linput' placeholder='10' name='numof' ></FormControl>\r\n                                </div>\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='checkbox'\r\n                                    id='sound'\r\n                                    label='Sounds'\r\n                                    name='sound'\r\n                                    // onChange={(e) => this.handleChange(e)}\r\n                                    className=\"text-white\"\r\n                                />\r\n                            </FormGroup>\r\n                            <Button onClick={() => this.props.saveFilters(this.state.currentFilters)} className=\"btn cs-btn mx-auto\">Save</Button>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"filters\" title=\"Filters\">\r\n                        <SelectedCasino casinos={this.state.casinoList.join()} removeit = {this.removeCasino}/>\r\n                        <div className=\"casino-select\">\r\n                            <Dropdown className=\"d-inline-block mr-3 font-18\">\r\n                                <Dropdown.Toggle variant=\"success\" className=\"bg-btn font-18\" id=\"dropdown-basic\">\r\n                                    Add Casino\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    {\r\n                                        CasinoList.map(casino => (\r\n                                            <Dropdown.Item key={casino} onClick={(e) => this.addCasino(e)} data-casino={casino}>{casino}</Dropdown.Item>\r\n                                        ))\r\n                                    }\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                            <Dropdown className=\"d-inline-block mr-3 font-18\">\r\n                                <Dropdown.Toggle variant=\"success\" className=\"bg-btn\" id=\"dropdown-basic\">\r\n                                    Links to Register\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    {\r\n                                        CasinoList.map(casino => (\r\n                                            <Dropdown.Item key={casino} data-link={casino}>{casino}</Dropdown.Item>\r\n                                        ))\r\n                                    }\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n    return bindActionCreators({saveFilters: saveFilters, saveCasino: saveCasino}, dispatch);\r\n}\r\nexport default connect(null, matchDispatchToProps)(Options)\r\n","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport App from '../App'\r\nimport Layout from '../components/Layout'\r\nimport Options from '../components/Options'\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Layout>\r\n                    <Route exact path='/' component={App} />\r\n                    <Route exact path='/tracking-options' component={Options} />\r\n                    </Layout>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","import {combineReducers} from 'redux';\nimport {ActiveFilterReducer} from './reducer-active-filters';\nimport {SelectedCasino} from './reducer-selected-casino'\nconst allReducers = combineReducers({\n    activeFilter: ActiveFilterReducer,\n    selectedCasino: SelectedCasino\n});\nexport default allReducers","export const ActiveFilterReducer =  function (state = null, action) {\n    switch (action.type) {\n        case 'SELECTED_FILTERS':\n            return action.payload;\n        default:\n            return false\n    }\n}\n","export const SelectedCasino = function (state = null, action) {\n    switch (action.type) {\n        case 'SELECTED_CASINO':\n            return action.payload;\n        default: \n            return false\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Routes from './routes/routes';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle.js'\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport allReducers from './reducers';\nconst store = createStore(\n  allReducers\n);\nReactDOM.render(\n  <Provider store={store}>\n    <Routes />\n  </Provider>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}