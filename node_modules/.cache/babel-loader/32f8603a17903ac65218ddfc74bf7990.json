{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ajay N\\\\Projects\\\\react-casino\\\\src\\\\components\\\\ListResults.js\";\nimport React, { Component } from 'react';\nimport { Container, Card, Row, Col, Badge } from 'react-bootstrap'; // import { trackResults } from '../services/trackResults'\n\nimport InfoModal from './InfoModal';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { matchResults } from '../services/matchResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListResults extends Component {\n  constructor() {\n    super();\n\n    this.setModalShow = result => {\n      this.setState({\n        modalShow: true,\n        selectedCasino: \"William Hill Casino\",\n        selectedTable: result.name,\n        selectedResult: result.results.join()\n      });\n    };\n\n    this.setModalHide = () => {\n      this.setState({\n        modalShow: false\n      });\n    };\n\n    this.matchResult = async () => {\n      var results = this.props.results;\n      results = results.map(result => {\n        this.state.filters.forEach(async filter => {\n          var status = await matchResults.applyFilters(result.results.filter((val, idx) => {\n            return idx < 4;\n          }), filter, this.props.filters);\n          result[filter] = status;\n\n          if (status === true) {\n            result.match = \"matching\";\n            console.log(status);\n          }\n        });\n        return result;\n      });\n      await this.setState({\n        CurrentResults: results\n      });\n      await this.setState({\n        CurrentResults: results\n      });\n      console.log(this.state.CurrentResults);\n    };\n\n    this.state = {\n      CurrentResults: [],\n      modalShow: false,\n      selectedCasino: \" \",\n      selectedTable: \" \",\n      selectedResult: \" \",\n      blackNumbers: [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35],\n      redNumbers: [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36],\n      filters: []\n    };\n  }\n\n  async componentDidMount() {\n    this.matchResult();\n    await this.setState({\n      CurrentResults: this.props.results\n    });\n    var fl = { ...this.props.filters\n    };\n    var filters = [];\n\n    for (let key in fl) {\n      if (key === \"splits\" || key === \"singles\" || key === \"streets\" || key === \"corners\" || key === \"lines\") {\n        filters.push(key);\n      } else {\n        filters.push(fl[key]);\n      }\n    }\n\n    await this.setState({\n      filters: filters\n    }); // trackResults().then((res) => {\n    //     console.log(\"results\", res)\n    //     this.setState({ CurrentResults: res })\n    //     console.log(this.state.CurrentResults)\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"result-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 row\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          onClick: this.matchResult,\n          className: \"btn cs-btn float-right ml-auto\",\n          style: {\n            marginRight: 15 + \"px\"\n          },\n          children: \"Track Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), JSON.stringify(this.props.filters), /*#__PURE__*/_jsxDEV(Row, {\n        children: [this.state.CurrentResults.map((result, idx) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"3\",\n            onClick: e => this.setModalShow(result),\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: `mb-3 shadow ${result.match}`,\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: \"https://cmscdn.staticcache.org/assets/image/0010/1482715/WHC_40604_GT_EvolutionRouletteLobby_372x372.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"text-white\",\n                  children: result.display_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"clearfix mb-1\",\n                  children: result.results.filter((result, idx) => idx < 5).map((result, idx) => {\n                    return /*#__PURE__*/_jsxDEV(Badge, {\n                      className: this.state.blackNumbers.includes(Number(result)) ? \"badge-black mx-1\" : this.state.redNumbers.includes(Number(result)) ? \"badge-red mx-1\" : Number(result) === 0 ? \"badge-green mx-1\" : \"mx-1\",\n                      children: result\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 73\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"clearfix mb-1\",\n                  children: result.results.filter((result, idx) => idx > 5 && idx < 11).map((result, idx) => {\n                    return /*#__PURE__*/_jsxDEV(Badge, {\n                      className: this.state.blackNumbers.includes(Number(result)) ? \"badge-black mx-1\" : this.state.redNumbers.includes(Number(result)) ? \"badge-red mx-1\" : Number(result) === 0 ? \"badge-green mx-1\" : \"mx-1\",\n                      children: result\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 73\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-white text-center mb-0\",\n                  children: \"Casinos:\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 53\n                }, this), result.casinos.map((casino, idx) => {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-white\",\n                    children: [casino, idx !== result.casinos.length - 1 ? \",\" : \"\", \"\\xA0\"]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 65\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 45\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 41\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(InfoModal, {\n          casino: this.state.selectedCasino,\n          table: this.state.selectedTable,\n          result: this.state.selectedResult,\n          show: this.state.modalShow,\n          onHide: () => this.setModalHide(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    filters: state.activeFilter.CurrentResults,\n    casinos: state.activeFilter.casinoList,\n    results: state.results,\n    settings: state.activeFilter.settings\n  };\n}\n\nexport default connect(mapStateToProps)(ListResults);","map":{"version":3,"sources":["C:/Ajay N/Projects/react-casino/src/components/ListResults.js"],"names":["React","Component","Container","Card","Row","Col","Badge","InfoModal","connect","Link","matchResults","ListResults","constructor","setModalShow","result","setState","modalShow","selectedCasino","selectedTable","name","selectedResult","results","join","setModalHide","matchResult","props","map","state","filters","forEach","filter","status","applyFilters","val","idx","match","console","log","CurrentResults","blackNumbers","redNumbers","componentDidMount","fl","key","push","render","marginRight","JSON","stringify","e","display_name","includes","Number","casinos","casino","length","mapStateToProps","activeFilter","casinoList","settings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Card, Row, Col, Badge } from 'react-bootstrap';\r\n// import { trackResults } from '../services/trackResults'\r\nimport InfoModal from './InfoModal';\r\nimport {connect} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {matchResults} from '../services/matchResults';\r\nclass ListResults extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            CurrentResults: [],\r\n            modalShow: false,\r\n            selectedCasino: \" \",\r\n            selectedTable: \" \",\r\n            selectedResult: \" \",\r\n            blackNumbers: [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35],\r\n            redNumbers: [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36],\r\n            filters: []\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        this.matchResult()\r\n        await this.setState({CurrentResults: this.props.results})\r\n        var fl = {...this.props.filters};\r\n        var filters = [];\r\n        for(let key in fl)\r\n        {\r\n            if((key === \"splits\") || (key === \"singles\") || (key === \"streets\") || (key === \"corners\") || (key === \"lines\")) {\r\n                filters.push(key)\r\n            }\r\n            else {\r\n                filters.push(fl[key])\r\n            }\r\n        }\r\n        await this.setState({filters: filters})\r\n        // trackResults().then((res) => {\r\n        //     console.log(\"results\", res)\r\n        //     this.setState({ CurrentResults: res })\r\n        //     console.log(this.state.CurrentResults)\r\n        // })\r\n    }\r\n    setModalShow = (result) => {\r\n        this.setState({ modalShow: true, selectedCasino: \"William Hill Casino\", selectedTable: result.name, selectedResult:  result.results.join()})\r\n    }\r\n    setModalHide = () => {\r\n        this.setState({ modalShow: false })\r\n    }\r\n    matchResult = async () => {\r\n        var results = this.props.results\r\n        results = results.map(result => {\r\n            this.state.filters.forEach(async (filter) => {\r\n                var status = await matchResults.applyFilters(result.results.filter((val, idx) => {return idx < 4}), filter, this.props.filters)\r\n                result[filter] = status\r\n                if(status === true) {\r\n                    result.match = \"matching\"\r\n                    console.log(status)\r\n                }\r\n            })\r\n            return result\r\n        });\r\n        await this.setState({CurrentResults: results})\r\n        await this.setState({CurrentResults: results})\r\n        console.log(this.state.CurrentResults)\r\n    }\r\n    render() {\r\n        return (\r\n            <Container className=\"result-list\">\r\n                <div className=\"my-3 row\"><Link to=\"#\" onClick={this.matchResult} className=\"btn cs-btn float-right ml-auto\" style={{marginRight: 15 + \"px\"}}>Track Results</Link></div>\r\n                {JSON.stringify(this.props.filters)}\r\n                        <Row>\r\n                            {\r\n                                this.state.CurrentResults.map((result, idx) => {\r\n                                    return (\r\n                                        <Col lg='3' onClick={(e) => this.setModalShow(result)} key={idx}>\r\n                                            <Card className={`mb-3 shadow ${result.match}`}>\r\n                                                <Card.Img variant=\"top\" src=\"https://cmscdn.staticcache.org/assets/image/0010/1482715/WHC_40604_GT_EvolutionRouletteLobby_372x372.jpg\" />\r\n                                                <Card.Body>\r\n                                                    <Card.Title className='text-white'>{result.display_name}</Card.Title>\r\n                                                    <Card.Text className='clearfix mb-1'>\r\n                                                        {\r\n                                                            result.results.filter((result, idx) => idx < 5).map((result, idx) => {\r\n                                                                return (<Badge className={(this.state.blackNumbers.includes(Number(result))) ? \"badge-black mx-1\" : (this.state.redNumbers.includes(Number(result))) ? \"badge-red mx-1\" : (Number(result) === 0) ? \"badge-green mx-1\" : \"mx-1\"} key={idx}>{result}</Badge>)\r\n                                                            })\r\n                                                        }\r\n                                                    </Card.Text>\r\n                                                    <Card.Text className='clearfix mb-1'>\r\n                                                        {\r\n                                                            result.results.filter((result, idx) => (idx > 5 && idx < 11)).map((result, idx) => {\r\n                                                                return (<Badge  className={(this.state.blackNumbers.includes(Number(result))) ? \"badge-black mx-1\" : (this.state.redNumbers.includes(Number(result))) ? \"badge-red mx-1\" : (Number(result) === 0) ? \"badge-green mx-1\" : \"mx-1\"} key={idx}>{result}</Badge>)\r\n                                                            })\r\n                                                        }\r\n                                                    </Card.Text>\r\n                                                </Card.Body>\r\n                                                <Card.Footer className=\"text-center\">\r\n                                                    <p className=\"text-white text-center mb-0\">Casinos:&nbsp;</p>\r\n                                                    {\r\n                                                        result.casinos.map((casino, idx) => {\r\n                                                            return(\r\n                                                                <span className=\"text-white\" key={idx}>{casino}{(idx !== result.casinos.length-1) ? \",\": \"\"}&nbsp;</span>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </Card.Footer>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <InfoModal\r\n                                casino={this.state.selectedCasino}\r\n                                table={this.state.selectedTable}\r\n                                result={this.state.selectedResult}\r\n                                show={this.state.modalShow}\r\n                                onHide={() => this.setModalHide(false)}\r\n                            />\r\n                        </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        filters: state.activeFilter.CurrentResults,\r\n        casinos: state.activeFilter.casinoList,\r\n        results: state.results,\r\n        settings: state.activeFilter.settings\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(ListResults);\r\n"]},"metadata":{},"sourceType":"module"}