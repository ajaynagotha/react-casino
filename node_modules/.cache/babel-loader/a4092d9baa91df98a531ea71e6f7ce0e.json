{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ajay N\\\\Projects\\\\react-casino\\\\src\\\\components\\\\Options.js\";\nimport React, { Component } from 'react';\nimport { Container, Form, FormGroup, Tabs, Tab, Row, Col, FormLabel, FormControl, Button, Dropdown } from 'react-bootstrap';\nimport Splits from '../config/Splits';\nimport Streets from '../config/Streets';\nimport Corners from '../config/Corners';\nimport Lines from '../config/Lines';\nimport SelectedFilters from './SelectedFilters';\nimport Singles from '../config/Singles';\nimport { CasinoList } from '../config/CasinoList';\nimport SelectedCasino from './SelectedCasino';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { saveCasino, saveFilters, saveSettings } from '../actions/index';\nimport { Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Options extends Component {\n  constructor() {\n    super();\n\n    this.removeCasino = async filter => {\n      var fl = this.state.casinoList;\n\n      if (fl.includes(filter)) {\n        var rmindex = fl.findIndex(value => {\n          return value === filter;\n        });\n        fl.splice(rmindex, 1);\n\n        if (fl.length === 0) {\n          fl = [];\n        }\n\n        await this.setState({\n          CasinoList: fl\n        });\n        this.props.saveCasino(this.state.casinoList);\n      }\n    };\n\n    this.removeFilter = async filter => {\n      var fl = this.state.currentFilters;\n\n      for (const x in fl) {\n        if (Array.isArray(fl[x]) && fl[x].includes(filter)) {\n          var rmindex = fl[x].findIndex(value => {\n            return value === filter;\n          });\n          fl[x].splice(rmindex, 1);\n\n          if (fl[x].length === 0) {\n            fl[x] = undefined;\n          }\n\n          await this.setState({\n            currentFilters: fl\n          });\n        }\n\n        if (fl[x] === filter) {\n          fl[x] = undefined;\n          await this.setState({\n            currentFilters: fl\n          });\n        }\n      }\n    };\n\n    this.addCasino = async e => {\n      var cArr = this.state.casinoList;\n\n      if (!cArr.includes(e.target.getAttribute(\"data-casino\"))) {\n        cArr.push(e.target.getAttribute(\"data-casino\"));\n        await this.setState({\n          casinoList: cArr\n        });\n        this.props.saveCasino(this.state.casinoList);\n      }\n    };\n\n    this.handleChange = async e => {\n      if (e.target.name === \"singles\" || e.target.name === \"streets\" || e.target.name === \"corners\" || e.target.name === \"lines\" || e.target.name === \"corners\" || e.target.name === \"splits\") {\n        console.log(e.target.value);\n        var iobj = { ...this.state.currentFilters\n        };\n\n        if (!iobj[e.target.name]) {\n          iobj[e.target.name] = [];\n        }\n\n        iobj[e.target.name].push(e.target.value);\n        await this.setState({\n          currentFilters: iobj\n        });\n        console.log(JSON.stringify(this.state.currentFilters));\n      } else {\n        iobj = { ...this.state.currentFilters\n        };\n        iobj[e.target.name] = e.target.value;\n        await this.setState({\n          currentFilters: iobj\n        });\n        console.log(JSON.stringify(this.state.currentFilters));\n      }\n    };\n\n    this.handleSettings = e => {\n      if (e.target.name === \"sound\") {\n        var settings = { ...this.state.settings\n        };\n        settings[e.target.name] = e.target.checked;\n        this.setState({\n          settings: settings\n        });\n      } else {\n        var settings = { ...this.state.settings\n        };\n        settings[e.target.name] = e.target.value;\n        this.setState({\n          settings: settings\n        });\n      }\n    };\n\n    this.saveOptions = async () => {\n      this.setState({\n        redirect: true\n      });\n      await this.props.saveFilters(this.state);\n    };\n\n    this.state = {\n      currentFilters: '',\n      casinoList: [],\n      settings: ''\n    };\n  }\n\n  async componentDidMount() {\n    await this.setState({\n      audio: false\n    });\n    await this.setState({\n      CasinoList: this.props.casinos.CasinoList ? this.props.casinos.CasinoList : [],\n      currentFilters: this.props.filters.currentFilters ? this.props.filters.currentFilters : \"\",\n      settings: this.props.settings.settings ? this.props.settings.settings : ''\n    });\n    await this.setState({\n      audio: this.props.settings.settings.sound\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"tracking-page py-5\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"options\",\n        id: \"casino-tabs\",\n        className: \"justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"options\",\n          title: \"Options\",\n          children: [/*#__PURE__*/_jsxDEV(SelectedFilters, {\n            filters: JSON.stringify(this.state.currentFilters),\n            removeit: this.removeFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                custom: true,\n                inline: true,\n                type: \"radio\",\n                id: \"even\",\n                label: \"Even\",\n                value: \"Even\",\n                name: \"evenodd\",\n                className: \"text-white\",\n                onChange: e => this.handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                custom: true,\n                inline: true,\n                type: \"radio\",\n                id: \"odd\",\n                label: \"Odd\",\n                name: \"evenodd\",\n                value: \"Odd\",\n                className: \"text-white\",\n                onChange: e => this.handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                custom: true,\n                inline: true,\n                type: \"radio\",\n                id: \"red\",\n                label: \"Red\",\n                name: \"redblack\",\n                value: \"Red\",\n                className: \"text-white\",\n                onChange: e => this.handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                custom: true,\n                inline: true,\n                type: \"radio\",\n                id: \"black\",\n                label: \"Black\",\n                name: \"redblack\",\n                value: \"Black\",\n                className: \"text-white\",\n                onChange: e => this.handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                custom: true,\n                inline: true,\n                type: \"radio\",\n                id: \"1stdozen\",\n                label: \"1st Dozen\",\n                name: \"dozens\",\n                value: \"1st Dozen\",\n                className: \"text-white\",\n                onChange: e => this.handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                custom: true,\n                inline: true,\n                type: \"radio\",\n                id: \"2nddozen\",\n                label: \"2nd Dozen\",\n                name: \"dozens\",\n                value: \"2nd Dozen\",\n                className: \"text-white\",\n                onChange: e => this.handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                custom: true,\n                inline: true,\n                type: \"radio\",\n                id: \"3rddozen\",\n                label: \"3rd Dozen\",\n                value: \"3rd Dozen\",\n                name: \"dozens\",\n                className: \"text-white\",\n                onChange: e => this.handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                custom: true,\n                inline: true,\n                type: \"radio\",\n                id: \"1stcolumn\",\n                label: \"1st Column\",\n                value: \"1st Column\",\n                name: \"columns\",\n                className: \"text-white\",\n                onChange: e => this.handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                custom: true,\n                inline: true,\n                type: \"radio\",\n                id: \"2ndcolumn\",\n                label: \"2nd Column\",\n                value: \"2nd Column\",\n                name: \"columns\",\n                className: \"text-white\",\n                onChange: e => this.handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                custom: true,\n                inline: true,\n                type: \"radio\",\n                id: \"3rdcolumn\",\n                label: \"3rd Column\",\n                value: \"3rd Column\",\n                name: \"columns\",\n                className: \"text-white\",\n                onChange: e => this.handleChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    inline: true,\n                    className: \"my-1 mr-2 text-white\",\n                    htmlFor: \"inlineFormCustomSelectPref\",\n                    children: \"Singles\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    className: \"my-1 mr-sm-2\",\n                    id: \"singles\",\n                    onChange: e => this.handleChange(e),\n                    name: \"singles\",\n                    custom: true,\n                    inline: true,\n                    children: Singles.map(single => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: single,\n                        children: single\n                      }, single, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 57\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    inline: true,\n                    className: \"my-1 mr-2 text-white\",\n                    htmlFor: \"inlineFormCustomSelectPref\",\n                    children: \"Splits\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    className: \"my-1 mr-sm-2\",\n                    id: \"splits\",\n                    onChange: e => this.handleChange(e),\n                    name: \"splits\",\n                    custom: true,\n                    inline: true,\n                    children: Splits.map(split => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        vslue: split.split,\n                        children: split.split\n                      }, split.split, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 61\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    inline: true,\n                    className: \"my-1 mr-2 text-white\",\n                    htmlFor: \"inlineFormCustomSelectPref\",\n                    children: \"streets\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    className: \"my-1 mr-sm-2\",\n                    id: \"streets\",\n                    onChange: e => this.handleChange(e),\n                    name: \"streets\",\n                    custom: true,\n                    inline: true,\n                    children: Streets.map(street => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: street.value,\n                        children: street.value\n                      }, street.value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 61\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    inline: true,\n                    className: \"my-1 mr-2 text-white\",\n                    htmlFor: \"inlineFormCustomSelectPref\",\n                    children: \"Corners\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    className: \"my-1 mr-sm-2\",\n                    id: \"corners\",\n                    onChange: e => this.handleChange(e),\n                    name: \"corners\",\n                    custom: true,\n                    inline: true,\n                    children: Corners.map(corner => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: corner.value,\n                        children: corner.value\n                      }, corner.value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 61\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    inline: true,\n                    className: \"my-1 mr-2 text-white\",\n                    htmlFor: \"inlineFormCustomSelectPref\",\n                    children: \"Lines\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    className: \"my-1 mr-sm-2\",\n                    id: \"lines\",\n                    onChange: e => this.handleChange(e),\n                    name: \"lines\",\n                    custom: true,\n                    inline: true,\n                    children: Lines.map(line => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: line.value,\n                        children: line.value\n                      }, line.value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 61\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                className: \"text-white\",\n                children: \"Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"clearfix\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  className: \"text-white inline-block\",\n                  children: \"Number of times in a row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  type: \"text\",\n                  className: \"inline-block mx-3 linput\",\n                  placeholder: \"10\",\n                  name: \"noi\",\n                  onChange: this.handleSettings\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                custom: true,\n                inline: true,\n                type: \"checkbox\",\n                id: \"sound\",\n                label: \"Sounds\",\n                name: \"sound\",\n                onChange: this.handleSettings,\n                className: \"text-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.saveOptions,\n              className: \"btn cs-btn mx-auto\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"filters\",\n          title: \"Filters\",\n          children: [/*#__PURE__*/_jsxDEV(SelectedCasino, {\n            casinos: this.props.casinos.CasinoList ? this.props.casinos.casinoList.join() : \"\",\n            removeit: this.removeCasino\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"casino-select\",\n            children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n              className: \"d-inline-block mr-3 font-18\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                variant: \"success\",\n                className: \"bg-btn font-18\",\n                id: \"dropdown-basic\",\n                children: \"Add Casino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                children: CasinoList.map(casino => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  onClick: e => this.addCasino(e),\n                  \"data-casino\": casino,\n                  children: casino\n                }, casino, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              className: \"d-inline-block mr-3 font-18\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                variant: \"success\",\n                className: \"bg-btn\",\n                id: \"dropdown-basic\",\n                children: \"Links to Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                children: CasinoList.map(casino => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  \"data-link\": casino,\n                  children: casino\n                }, casino, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    filters: state.activeFilter,\n    casinos: state.activeFilter,\n    settings: state.activeFilter\n  };\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    saveFilters: saveFilters,\n    saveCasino: saveCasino,\n    saveSettings: saveSettings\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(Options);","map":{"version":3,"sources":["C:/Ajay N/Projects/react-casino/src/components/Options.js"],"names":["React","Component","Container","Form","FormGroup","Tabs","Tab","Row","Col","FormLabel","FormControl","Button","Dropdown","Splits","Streets","Corners","Lines","SelectedFilters","Singles","CasinoList","SelectedCasino","bindActionCreators","connect","saveCasino","saveFilters","saveSettings","Redirect","Options","constructor","removeCasino","filter","fl","state","casinoList","includes","rmindex","findIndex","value","splice","length","setState","props","removeFilter","currentFilters","x","Array","isArray","undefined","addCasino","e","cArr","target","getAttribute","push","handleChange","name","console","log","iobj","JSON","stringify","handleSettings","settings","checked","saveOptions","redirect","componentDidMount","audio","casinos","filters","sound","render","map","single","split","street","corner","line","join","casino","mapStateToProps","activeFilter","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Form, FormGroup, Tabs, Tab, Row, Col, FormLabel, FormControl, Button, Dropdown } from 'react-bootstrap'\r\nimport Splits from '../config/Splits'\r\nimport Streets from '../config/Streets'\r\nimport Corners from '../config/Corners'\r\nimport Lines from '../config/Lines'\r\nimport SelectedFilters from './SelectedFilters'\r\nimport Singles from '../config/Singles'\r\nimport { CasinoList } from '../config/CasinoList'\r\nimport SelectedCasino from './SelectedCasino'\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {saveCasino, saveFilters, saveSettings} from '../actions/index'\r\nimport { Redirect } from 'react-router'\r\nclass Options extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            currentFilters: '',\r\n            casinoList: [],\r\n            settings: ''\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.setState({audio: false})\r\n        await this.setState({CasinoList: (this.props.casinos.CasinoList) ? this.props.casinos.CasinoList : [], currentFilters: (this.props.filters.currentFilters) ? this.props.filters.currentFilters : \"\", settings: this.props.settings.settings ? this.props.settings.settings: ''})\r\n        await this.setState({audio: this.props.settings.settings.sound})\r\n    }\r\n    removeCasino = async (filter) => {\r\n        var fl = this.state.casinoList;\r\n        if (fl.includes(filter)) {\r\n            var rmindex = fl.findIndex(value => {\r\n                return value === filter\r\n            })\r\n            fl.splice(rmindex, 1)\r\n            if (fl.length === 0) {\r\n                fl = [];\r\n            }\r\n            await this.setState({ CasinoList: fl })\r\n            this.props.saveCasino(this.state.casinoList);\r\n        }\r\n    }\r\n    removeFilter = async (filter) => {\r\n        var fl = this.state.currentFilters;\r\n        for (const x in fl) {\r\n            if ((Array.isArray(fl[x])) && fl[x].includes(filter)) {\r\n                var rmindex = fl[x].findIndex(value => {\r\n                    return value === filter\r\n                })\r\n                fl[x].splice(rmindex, 1)\r\n                if (fl[x].length === 0) {\r\n                    fl[x] = undefined;\r\n                }\r\n                await this.setState({ currentFilters: fl })\r\n            }\r\n            if (fl[x] === filter) {\r\n                fl[x] = undefined;\r\n                await this.setState({ currentFilters: fl })\r\n            }\r\n        }\r\n    }\r\n    addCasino = async (e) => {\r\n        var cArr = this.state.casinoList;\r\n        if (!cArr.includes(e.target.getAttribute(\"data-casino\"))) {\r\n            cArr.push(e.target.getAttribute(\"data-casino\"))\r\n            await this.setState({ casinoList: cArr })\r\n            this.props.saveCasino(this.state.casinoList)\r\n        }\r\n    }\r\n    handleChange = async (e) => {\r\n        if ((e.target.name === \"singles\") || (e.target.name === \"streets\") || (e.target.name === \"corners\") || (e.target.name === \"lines\") || (e.target.name === \"corners\") || (e.target.name === \"splits\")) {\r\n            console.log(e.target.value)\r\n            var iobj = { ...this.state.currentFilters }\r\n            if (!iobj[e.target.name]) {\r\n                iobj[e.target.name] = []\r\n            }\r\n            iobj[e.target.name].push(e.target.value);\r\n            await this.setState({ currentFilters: iobj })\r\n            console.log(JSON.stringify(this.state.currentFilters))\r\n        }\r\n        else {\r\n            iobj = { ...this.state.currentFilters }\r\n            iobj[e.target.name] = e.target.value;\r\n            await this.setState({ currentFilters: iobj })\r\n            console.log(JSON.stringify(this.state.currentFilters))\r\n        }\r\n    }\r\n    handleSettings = (e) => {\r\n        if(e.target.name === \"sound\") {\r\n            var settings = {...this.state.settings}\r\n            settings[e.target.name] = e.target.checked\r\n            this.setState({settings: settings})\r\n        }\r\n        else {\r\n            var settings = {...this.state.settings}\r\n            settings[e.target.name] = e.target.value\r\n            this.setState({settings: settings})\r\n        }\r\n    }\r\n    saveOptions = async () => {\r\n        this.setState({redirect: true})\r\n        await this.props.saveFilters(this.state);\r\n    }\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return (\r\n            <Container className=\"tracking-page py-5\">\r\n                <Tabs defaultActiveKey=\"options\" id=\"casino-tabs\" className=\"justify-content-center\">\r\n                    <Tab eventKey=\"options\" title=\"Options\">\r\n                        <SelectedFilters filters={JSON.stringify(this.state.currentFilters)} removeit={this.removeFilter} />\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='even'\r\n                                    label='Even'\r\n                                    value=\"Even\"\r\n                                    name='evenodd'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='odd'\r\n                                    label='Odd'\r\n                                    name='evenodd'\r\n                                    value='Odd'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='red'\r\n                                    label='Red'\r\n                                    name='redblack'\r\n                                    value='Red'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='black'\r\n                                    label='Black'\r\n                                    name='redblack'\r\n                                    value='Black'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='1stdozen'\r\n                                    label='1st Dozen'\r\n                                    name='dozens'\r\n                                    value='1st Dozen'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='2nddozen'\r\n                                    label='2nd Dozen'\r\n                                    name='dozens'\r\n                                    value='2nd Dozen'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='3rddozen'\r\n                                    label='3rd Dozen'\r\n                                    value='3rd Dozen'\r\n                                    name='dozens'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='1stcolumn'\r\n                                    label='1st Column'\r\n                                    value='1st Column'\r\n                                    name='columns'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='2ndcolumn'\r\n                                    label='2nd Column'\r\n                                    value='2nd Column'\r\n                                    name='columns'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='radio'\r\n                                    id='3rdcolumn'\r\n                                    label='3rd Column'\r\n                                    value='3rd Column'\r\n                                    name='columns'\r\n                                    className=\"text-white\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Label inline className=\"my-1 mr-2 text-white\" htmlFor=\"inlineFormCustomSelectPref\">\r\n                                            Singles\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"my-1 mr-sm-2\"\r\n                                            id=\"singles\"\r\n                                            onChange={(e) => this.handleChange(e)}\r\n                                            name=\"singles\"\r\n                                            custom\r\n                                            inline\r\n                                        >\r\n                                            {Singles.map((single) => {\r\n                                                return (<option key={single} value={single}>{single}</option>)\r\n                                            })}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label inline className=\"my-1 mr-2 text-white\" htmlFor=\"inlineFormCustomSelectPref\">\r\n                                            Splits\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"my-1 mr-sm-2\"\r\n                                            id=\"splits\"\r\n                                            onChange={(e) => this.handleChange(e)}\r\n                                            name=\"splits\"\r\n                                            custom\r\n                                            inline\r\n                                        >\r\n                                            {\r\n                                                Splits.map((split) => {\r\n                                                    return (<option key={split.split} vslue={split.split}>{split.split}</option>)\r\n                                                })\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label inline className=\"my-1 mr-2 text-white\" htmlFor=\"inlineFormCustomSelectPref\">\r\n                                            streets\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"my-1 mr-sm-2\"\r\n                                            id=\"streets\"\r\n                                            onChange={(e) => this.handleChange(e)}\r\n                                            name=\"streets\"\r\n                                            custom\r\n                                            inline\r\n                                        >\r\n                                            {\r\n                                                Streets.map((street) => {\r\n                                                    return (<option key={street.value} value={street.value}>{street.value}</option>)\r\n                                                })\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label inline className=\"my-1 mr-2 text-white\" htmlFor=\"inlineFormCustomSelectPref\">\r\n                                            Corners\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"my-1 mr-sm-2\"\r\n                                            id=\"corners\"\r\n                                            onChange={(e) => this.handleChange(e)}\r\n                                            name=\"corners\"\r\n                                            custom\r\n                                            inline\r\n                                        >\r\n                                            {\r\n                                                Corners.map((corner) => {\r\n                                                    return (<option key={corner.value} value={corner.value}>{corner.value}</option>)\r\n                                                })\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label inline className=\"my-1 mr-2 text-white\" htmlFor=\"inlineFormCustomSelectPref\">\r\n                                            Lines\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"my-1 mr-sm-2\"\r\n                                            id=\"lines\"\r\n                                            onChange={(e) => this.handleChange(e)}\r\n                                            name=\"lines\"\r\n                                            custom\r\n                                            inline\r\n                                        >\r\n                                            {\r\n                                                Lines.map((line) => {\r\n                                                    return (<option key={line.value} value={line.value}>{line.value}</option>)\r\n                                                })\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <FormLabel className=\"text-white\">Notifications</FormLabel>\r\n                                <div className='clearfix'>\r\n                                    <FormLabel className=\"text-white inline-block\">Number of times in a row</FormLabel>\r\n                                    <FormControl type='text' className='inline-block mx-3 linput' placeholder='10' name='noi' onChange={this.handleSettings}></FormControl>\r\n                                </div>\r\n                                <Form.Check\r\n                                    custom\r\n                                    inline\r\n                                    type='checkbox'\r\n                                    id='sound'\r\n                                    label='Sounds'\r\n                                    name='sound'\r\n                                    onChange={this.handleSettings}\r\n                                    className=\"text-white\"\r\n                                />\r\n                            </FormGroup>\r\n                            <Button onClick={this.saveOptions} className=\"btn cs-btn mx-auto\">Save</Button>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"filters\" title=\"Filters\">\r\n                        <SelectedCasino casinos={(this.props.casinos.CasinoList) ? this.props.casinos.casinoList.join() : \"\"} removeit = {this.removeCasino}/>\r\n                        <div className=\"casino-select\">\r\n                            <Dropdown className=\"d-inline-block mr-3 font-18\">\r\n                                <Dropdown.Toggle variant=\"success\" className=\"bg-btn font-18\" id=\"dropdown-basic\">\r\n                                    Add Casino\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    {\r\n                                        CasinoList.map(casino => (\r\n                                            <Dropdown.Item key={casino} onClick={(e) => this.addCasino(e)} data-casino={casino}>{casino}</Dropdown.Item>\r\n                                        ))\r\n                                    }\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                            <Dropdown className=\"d-inline-block mr-3 font-18\">\r\n                                <Dropdown.Toggle variant=\"success\" className=\"bg-btn\" id=\"dropdown-basic\">\r\n                                    Links to Register\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    {\r\n                                        CasinoList.map(casino => (\r\n                                            <Dropdown.Item key={casino} data-link={casino}>{casino}</Dropdown.Item>\r\n                                        ))\r\n                                    }\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        filters: state.activeFilter,\r\n        casinos: state.activeFilter,\r\n        settings: state.activeFilter\r\n    };\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n    return bindActionCreators({saveFilters: saveFilters, saveCasino: saveCasino, saveSettings: saveSettings}, dispatch);\r\n}\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Options)\r\n"]},"metadata":{},"sourceType":"module"}