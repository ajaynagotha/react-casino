{"ast":null,"code":"export const matchResults = {\n  blackNumbers: [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35],\n  redNumbers: [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36],\n  firstColumn: [1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34],\n  secondColumn: [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35],\n  thirsdColumn: [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36],\n  applyFilters: function (results, label, filters) {\n    console.log(filters);\n    return new Promise((resolve, reject) => {\n      var nresults = [];\n\n      switch (label) {\n        case \"Even\":\n          nresults = results.filter(result => {\n            return Number(result) % 2 === 0;\n          });\n\n          if (nresults.length === results.length) {\n            return resolve(true);\n          } else {\n            return resolve(false);\n          }\n\n        case \"Odd\":\n          nresults = results.filter(result => {\n            return Number(result) % 2 !== 0;\n          });\n\n          if (nresults.length === results.length) {\n            return true;\n          } else {\n            return resolve(false);\n          }\n\n        case \"Red\":\n          nresults = results.filter(result => {\n            return this.redNumbers.includes(Number(result));\n          });\n\n          if (nresults.length === results.length) {\n            return resolve(true);\n          } else {\n            return resolve(false);\n          }\n\n        case \"Black\":\n          nresults = results.filter(result => {\n            return this.blackNumbers.includes(Number(result));\n          });\n\n          if (nresults.length === results.length) {\n            return resolve(true);\n          } else {\n            return resolve(false);\n          }\n\n        case \"1st Dozen\":\n          nresults = results.filter(result => {\n            return Number(result) >= 1 && Number(result) <= 12;\n          });\n\n          if (nresults.length === results.length) {\n            return resolve(true);\n          } else {\n            return resolve(false);\n          }\n\n        case \"2nd Dozen\":\n          nresults = results.filter(result => {\n            return Number(result) >= 13 && Number(result) <= 24;\n          });\n\n          if (nresults.length === results.length) {\n            return resolve(true);\n          } else {\n            return resolve(false);\n          }\n\n        case \"3rd Dozen\":\n          nresults = results.filter(result => {\n            return Number(result) >= 25 && Number(result) <= 36;\n          });\n\n          if (nresults.length === results.length) {\n            return resolve(true);\n          } else {\n            return resolve(false);\n          }\n\n        case \"1st Column\":\n          nresults = results.filter(result => {\n            return this.firstColumn.includes(Number(result));\n          });\n\n          if (nresults.length === results.length) {\n            return resolve(true);\n          } else {\n            return resolve(false);\n          }\n\n        case \"2nd Colum\":\n          nresults = results.filter(result => {\n            return this.secondColumn.includes(Number(result));\n          });\n\n          if (nresults.length === results.length) {\n            return resolve(true);\n          } else {\n            return resolve(false);\n          }\n\n        case \"3rd Colum\":\n          nresults = results.filter(result => {\n            return this.thirsdColumn.includes(Number(result));\n          });\n\n          if (nresults.length === results.length) {\n            return resolve(true);\n          } else {\n            return resolve(false);\n          }\n\n        case \"Singles\":\n          var singles = filters.Singles;\n          console.log(singles);\n          nresults = results.filter(result => {\n            return this.singles.includes(result);\n          });\n\n          if (nresults.length === results.length) {\n            return resolve(true);\n          } else {\n            return resolve(false);\n          }\n\n        default:\n          return \"Error\";\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Ajay N/Projects/react-casino/src/services/matchResults.js"],"names":["matchResults","blackNumbers","redNumbers","firstColumn","secondColumn","thirsdColumn","applyFilters","results","label","filters","console","log","Promise","resolve","reject","nresults","filter","result","Number","length","includes","singles","Singles"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,EAAiD,EAAjD,EAAqD,EAArD,EAAyD,EAAzD,EAA6D,EAA7D,EAAiE,EAAjE,CADU;AAExBC,EAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,EAApD,EAAwD,EAAxD,EAA4D,EAA5D,EAAgE,EAAhE,CAFY;AAGxBC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,CAHW;AAIxBC,EAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,CAJU;AAKxBC,EAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,CALU;AAMxBC,EAAAA,YAAY,EAAE,UAAUC,OAAV,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmC;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAIC,QAAQ,GAAG,EAAf;;AACA,cAAQP,KAAR;AACI,aAAK,MAAL;AACIO,UAAAA,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAgBC,MAAD,IAAY;AAClC,mBAAQC,MAAM,CAACD,MAAD,CAAN,GAAiB,CAAlB,KAAyB,CAAhC;AACH,WAFU,CAAX;;AAGA,cAAIF,QAAQ,CAACI,MAAT,KAAoBZ,OAAO,CAACY,MAAhC,EAAwC;AACpC,mBAAON,OAAO,CAAC,IAAD,CAAd;AACH,WAFD,MAGK;AACD,mBAAOA,OAAO,CAAC,KAAD,CAAd;AACH;;AACL,aAAK,KAAL;AACIE,UAAAA,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAgBC,MAAD,IAAY;AAClC,mBAAQC,MAAM,CAACD,MAAD,CAAN,GAAiB,CAAlB,KAAyB,CAAhC;AACH,WAFU,CAAX;;AAGA,cAAIF,QAAQ,CAACI,MAAT,KAAoBZ,OAAO,CAACY,MAAhC,EAAwC;AACpC,mBAAO,IAAP;AACH,WAFD,MAGK;AACD,mBAAON,OAAO,CAAC,KAAD,CAAd;AACH;;AACL,aAAK,KAAL;AACIE,UAAAA,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAgBC,MAAD,IAAY;AAClC,mBAAO,KAAKf,UAAL,CAAgBkB,QAAhB,CAAyBF,MAAM,CAACD,MAAD,CAA/B,CAAP;AACH,WAFU,CAAX;;AAGA,cAAIF,QAAQ,CAACI,MAAT,KAAoBZ,OAAO,CAACY,MAAhC,EAAwC;AACpC,mBAAON,OAAO,CAAC,IAAD,CAAd;AACH,WAFD,MAGK;AACD,mBAAOA,OAAO,CAAC,KAAD,CAAd;AACH;;AACL,aAAK,OAAL;AACIE,UAAAA,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAgBC,MAAD,IAAY;AAClC,mBAAO,KAAKhB,YAAL,CAAkBmB,QAAlB,CAA2BF,MAAM,CAACD,MAAD,CAAjC,CAAP;AACH,WAFU,CAAX;;AAGA,cAAIF,QAAQ,CAACI,MAAT,KAAoBZ,OAAO,CAACY,MAAhC,EAAwC;AACpC,mBAAON,OAAO,CAAC,IAAD,CAAd;AACH,WAFD,MAGK;AACD,mBAAOA,OAAO,CAAC,KAAD,CAAd;AACH;;AACL,aAAK,WAAL;AACIE,UAAAA,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAgBC,MAAD,IAAY;AAClC,mBAASC,MAAM,CAACD,MAAD,CAAN,IAAkB,CAAnB,IAA0BC,MAAM,CAACD,MAAD,CAAN,IAAkB,EAApD;AACH,WAFU,CAAX;;AAGA,cAAIF,QAAQ,CAACI,MAAT,KAAoBZ,OAAO,CAACY,MAAhC,EAAwC;AACpC,mBAAON,OAAO,CAAC,IAAD,CAAd;AACH,WAFD,MAGK;AACD,mBAAOA,OAAO,CAAC,KAAD,CAAd;AACH;;AACL,aAAK,WAAL;AACIE,UAAAA,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAgBC,MAAD,IAAY;AAClC,mBAASC,MAAM,CAACD,MAAD,CAAN,IAAkB,EAAnB,IAA2BC,MAAM,CAACD,MAAD,CAAN,IAAkB,EAArD;AACH,WAFU,CAAX;;AAGA,cAAIF,QAAQ,CAACI,MAAT,KAAoBZ,OAAO,CAACY,MAAhC,EAAwC;AACpC,mBAAON,OAAO,CAAC,IAAD,CAAd;AACH,WAFD,MAGK;AACD,mBAAOA,OAAO,CAAC,KAAD,CAAd;AACH;;AACL,aAAK,WAAL;AACIE,UAAAA,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAgBC,MAAD,IAAY;AAClC,mBAASC,MAAM,CAACD,MAAD,CAAN,IAAkB,EAAnB,IAA2BC,MAAM,CAACD,MAAD,CAAN,IAAkB,EAArD;AACH,WAFU,CAAX;;AAGA,cAAIF,QAAQ,CAACI,MAAT,KAAoBZ,OAAO,CAACY,MAAhC,EAAwC;AACpC,mBAAON,OAAO,CAAC,IAAD,CAAd;AACH,WAFD,MAGK;AACD,mBAAOA,OAAO,CAAC,KAAD,CAAd;AACH;;AACL,aAAK,YAAL;AACIE,UAAAA,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAgBC,MAAD,IAAY;AAClC,mBAAO,KAAKd,WAAL,CAAiBiB,QAAjB,CAA0BF,MAAM,CAACD,MAAD,CAAhC,CAAP;AACH,WAFU,CAAX;;AAGA,cAAIF,QAAQ,CAACI,MAAT,KAAoBZ,OAAO,CAACY,MAAhC,EAAwC;AACpC,mBAAON,OAAO,CAAC,IAAD,CAAd;AACH,WAFD,MAGK;AACD,mBAAOA,OAAO,CAAC,KAAD,CAAd;AACH;;AACL,aAAK,WAAL;AACIE,UAAAA,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAgBC,MAAD,IAAY;AAClC,mBAAO,KAAKb,YAAL,CAAkBgB,QAAlB,CAA2BF,MAAM,CAACD,MAAD,CAAjC,CAAP;AACH,WAFU,CAAX;;AAGA,cAAIF,QAAQ,CAACI,MAAT,KAAoBZ,OAAO,CAACY,MAAhC,EAAwC;AACpC,mBAAON,OAAO,CAAC,IAAD,CAAd;AACH,WAFD,MAGK;AACD,mBAAOA,OAAO,CAAC,KAAD,CAAd;AACH;;AACL,aAAK,WAAL;AACIE,UAAAA,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAgBC,MAAD,IAAY;AAClC,mBAAO,KAAKZ,YAAL,CAAkBe,QAAlB,CAA2BF,MAAM,CAACD,MAAD,CAAjC,CAAP;AACH,WAFU,CAAX;;AAGA,cAAIF,QAAQ,CAACI,MAAT,KAAoBZ,OAAO,CAACY,MAAhC,EAAwC;AACpC,mBAAON,OAAO,CAAC,IAAD,CAAd;AACH,WAFD,MAGK;AACD,mBAAOA,OAAO,CAAC,KAAD,CAAd;AACH;;AACL,aAAK,SAAL;AACI,cAAIQ,OAAO,GAAGZ,OAAO,CAACa,OAAtB;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAYU,OAAZ;AACAN,UAAAA,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAgBC,MAAD,IAAY;AAClC,mBAAO,KAAKI,OAAL,CAAaD,QAAb,CAAsBH,MAAtB,CAAP;AACH,WAFU,CAAX;;AAGA,cAAIF,QAAQ,CAACI,MAAT,KAAoBZ,OAAO,CAACY,MAAhC,EAAwC;AACpC,mBAAON,OAAO,CAAC,IAAD,CAAd;AACH,WAFD,MAGK;AACD,mBAAOA,OAAO,CAAC,KAAD,CAAd;AACH;;AACL;AACI,iBAAO,OAAP;AAlHR;AAoHH,KAtHM,CAAP;AAuHH;AA/HuB,CAArB","sourcesContent":["export const matchResults = {\r\n    blackNumbers: [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35],\r\n    redNumbers: [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36],\r\n    firstColumn: [1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34],\r\n    secondColumn: [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35],\r\n    thirsdColumn: [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36],\r\n    applyFilters: function (results, label, filters) {\r\n        console.log(filters)\r\n        return new Promise((resolve, reject) => {\r\n            var nresults = []\r\n            switch (label) {\r\n                case \"Even\":\r\n                    nresults = results.filter((result) => {\r\n                        return (Number(result) % 2) === 0;\r\n                    })\r\n                    if (nresults.length === results.length) {\r\n                        return resolve(true)\r\n                    }\r\n                    else {\r\n                        return resolve(false)\r\n                    }\r\n                case \"Odd\":\r\n                    nresults = results.filter((result) => {\r\n                        return (Number(result) % 2) !== 0;\r\n                    })\r\n                    if (nresults.length === results.length) {\r\n                        return true\r\n                    }\r\n                    else {\r\n                        return resolve(false)\r\n                    }\r\n                case \"Red\":\r\n                    nresults = results.filter((result) => {\r\n                        return this.redNumbers.includes(Number(result));\r\n                    })\r\n                    if (nresults.length === results.length) {\r\n                        return resolve(true)\r\n                    }\r\n                    else {\r\n                        return resolve(false)\r\n                    }\r\n                case \"Black\":\r\n                    nresults = results.filter((result) => {\r\n                        return this.blackNumbers.includes(Number(result));\r\n                    })\r\n                    if (nresults.length === results.length) {\r\n                        return resolve(true)\r\n                    }\r\n                    else {\r\n                        return resolve(false)\r\n                    }\r\n                case \"1st Dozen\":\r\n                    nresults = results.filter((result) => {\r\n                        return ((Number(result) >= 1) && (Number(result) <= 12))\r\n                    })\r\n                    if (nresults.length === results.length) {\r\n                        return resolve(true)\r\n                    }\r\n                    else {\r\n                        return resolve(false)\r\n                    }\r\n                case \"2nd Dozen\":\r\n                    nresults = results.filter((result) => {\r\n                        return ((Number(result) >= 13) && (Number(result) <= 24))\r\n                    })\r\n                    if (nresults.length === results.length) {\r\n                        return resolve(true)\r\n                    }\r\n                    else {\r\n                        return resolve(false)\r\n                    }\r\n                case \"3rd Dozen\":\r\n                    nresults = results.filter((result) => {\r\n                        return ((Number(result) >= 25) && (Number(result) <= 36))\r\n                    })\r\n                    if (nresults.length === results.length) {\r\n                        return resolve(true)\r\n                    }\r\n                    else {\r\n                        return resolve(false)\r\n                    }\r\n                case \"1st Column\":\r\n                    nresults = results.filter((result) => {\r\n                        return this.firstColumn.includes(Number(result));\r\n                    })\r\n                    if (nresults.length === results.length) {\r\n                        return resolve(true)\r\n                    }\r\n                    else {\r\n                        return resolve(false)\r\n                    }\r\n                case \"2nd Colum\":\r\n                    nresults = results.filter((result) => {\r\n                        return this.secondColumn.includes(Number(result));\r\n                    })\r\n                    if (nresults.length === results.length) {\r\n                        return resolve(true)\r\n                    }\r\n                    else {\r\n                        return resolve(false)\r\n                    }\r\n                case \"3rd Colum\":\r\n                    nresults = results.filter((result) => {\r\n                        return this.thirsdColumn.includes(Number(result));\r\n                    })\r\n                    if (nresults.length === results.length) {\r\n                        return resolve(true)\r\n                    }\r\n                    else {\r\n                        return resolve(false)\r\n                    }\r\n                case \"Singles\":\r\n                    var singles = filters.Singles\r\n                    console.log(singles)\r\n                    nresults = results.filter((result) => {\r\n                        return this.singles.includes(result);\r\n                    })\r\n                    if (nresults.length === results.length) {\r\n                        return resolve(true)\r\n                    }\r\n                    else {\r\n                        return resolve(false)\r\n                    }\r\n                default:\r\n                    return \"Error\"\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}