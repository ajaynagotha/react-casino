{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ajay N\\\\Projects\\\\react-casino\\\\src\\\\components\\\\ListResults.js\";\nimport React, { Component } from 'react';\nimport { Container, Card, Row, Col, Badge, Tabs, Tab } from 'react-bootstrap';\nimport { trackResults } from '../services/trackResults';\nimport { InfoModal } from './InfoModal';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListResults extends Component {\n  constructor() {\n    super();\n\n    this.setModalShow = result => {\n      this.setState({\n        modalShow: true,\n        selectedCasino: \"William Hill Casino\",\n        selectedTable: result.name,\n        selectedResult: result.results.join()\n      });\n    };\n\n    this.setModalHide = () => {\n      this.setState({\n        modalShow: false\n      });\n    };\n\n    this.state = {\n      CurrentResults: [],\n      modalShow: false,\n      selectedCasino: \" \",\n      selectedTable: \" \",\n      selectedResult: \" \",\n      blackNumbers: [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35],\n      redNumbers: [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36]\n    };\n  }\n\n  componentDidMount() {\n    trackResults().then(res => {\n      console.log(\"results\", res);\n      this.setState({\n        CurrentResults: res\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"result-list\",\n      children: [JSON.stringify(this.props.filters), /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"william-hill\",\n        id: \"casino-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"william-hill\",\n          title: \"William Hill\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [this.state.CurrentResults.map(result => {\n              return /*#__PURE__*/_jsxDEV(Col, {\n                lg: \"3\",\n                onClick: e => this.setModalShow(result),\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"mb-3 shadow\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                    variant: \"top\",\n                    src: \"https://cmscdn.staticcache.org/assets/image/0010/1482715/WHC_40604_GT_EvolutionRouletteLobby_372x372.jpg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      className: \"text-white\",\n                      children: result.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 45,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      className: \"clearfix mb-1\",\n                      children: result.results.filter((result, idx) => idx < 5).map(result => {\n                        return /*#__PURE__*/_jsxDEV(Badge, {\n                          className: this.state.blackNumbers.includes(Number(result)) ? \"badge-black mx-1\" : this.state.redNumbers.includes(Number(result)) ? \"badge-red mx-1\" : Number(result) === 0 ? \"badge-green mx-1\" : \"mx-1\",\n                          children: result\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 49,\n                          columnNumber: 73\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      className: \"clearfix mb-1\",\n                      children: result.results.filter((result, idx) => idx > 5 && idx < 11).map(result => {\n                        return /*#__PURE__*/_jsxDEV(Badge, {\n                          className: this.state.blackNumbers.includes(Number(result)) ? \"badge-black mx-1\" : this.state.redNumbers.includes(Number(result)) ? \"badge-red mx-1\" : Number(result) === 0 ? \"badge-green mx-1\" : \"mx-1\",\n                          children: result\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 56,\n                          columnNumber: 73\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 49\n                  }, this)]\n                }, result.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 41\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(InfoModal, {\n              casino: this.state.selectedCasino,\n              table: this.state.selectedTable,\n              result: this.state.selectedResult,\n              show: this.state.modalShow,\n              onHide: () => this.setModalHide(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"bet365\",\n          title: \"Bet365\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"roobet\",\n          title: \"RooBet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    filters: state.activeFilter\n  };\n}\n\nexport default connect(mapStateToProps)(ListResults);","map":{"version":3,"sources":["C:/Ajay N/Projects/react-casino/src/components/ListResults.js"],"names":["React","Component","Container","Card","Row","Col","Badge","Tabs","Tab","trackResults","InfoModal","connect","ListResults","constructor","setModalShow","result","setState","modalShow","selectedCasino","selectedTable","name","selectedResult","results","join","setModalHide","state","CurrentResults","blackNumbers","redNumbers","componentDidMount","then","res","console","log","render","JSON","stringify","props","filters","map","e","filter","idx","includes","Number","id","mapStateToProps","activeFilter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Card, Row, Col, Badge, Tabs, Tab } from 'react-bootstrap';\r\nimport { trackResults } from '../services/trackResults'\r\nimport { InfoModal } from './InfoModal';\r\nimport {connect} from 'react-redux';\r\nclass ListResults extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            CurrentResults: [],\r\n            modalShow: false,\r\n            selectedCasino: \" \",\r\n            selectedTable: \" \",\r\n            selectedResult: \" \",\r\n            blackNumbers: [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35],\r\n            redNumbers: [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        trackResults().then((res) => {\r\n            console.log(\"results\", res)\r\n            this.setState({ CurrentResults: res })\r\n        })\r\n    }\r\n    setModalShow = (result) => {\r\n        this.setState({ modalShow: true, selectedCasino: \"William Hill Casino\", selectedTable: result.name, selectedResult:  result.results.join()})\r\n    }\r\n    setModalHide = () => {\r\n        this.setState({ modalShow: false })\r\n    }\r\n    render() {\r\n        return (\r\n            <Container className=\"result-list\">\r\n                {JSON.stringify(this.props.filters)}\r\n                <Tabs defaultActiveKey=\"william-hill\" id=\"casino-tabs\">\r\n                    <Tab eventKey=\"william-hill\" title=\"William Hill\">\r\n                        <Row>\r\n                            {\r\n                                this.state.CurrentResults.map((result) => {\r\n                                    return (\r\n                                        <Col lg='3' onClick={(e) => this.setModalShow(result)}>\r\n                                            <Card className='mb-3 shadow' key={result.id}>\r\n                                                <Card.Img variant=\"top\" src=\"https://cmscdn.staticcache.org/assets/image/0010/1482715/WHC_40604_GT_EvolutionRouletteLobby_372x372.jpg\" />\r\n                                                <Card.Body>\r\n                                                    <Card.Title className='text-white'>{result.name}</Card.Title>\r\n                                                    <Card.Text className='clearfix mb-1'>\r\n                                                        {\r\n                                                            result.results.filter((result, idx) => idx < 5).map((result) => {\r\n                                                                return (<Badge className={(this.state.blackNumbers.includes(Number(result))) ? \"badge-black mx-1\" : (this.state.redNumbers.includes(Number(result))) ? \"badge-red mx-1\" : (Number(result) === 0) ? \"badge-green mx-1\" : \"mx-1\"}>{result}</Badge>)\r\n                                                            })\r\n                                                        }\r\n                                                    </Card.Text>\r\n                                                    <Card.Text className='clearfix mb-1'>\r\n                                                        {\r\n                                                            result.results.filter((result, idx) => (idx > 5 && idx < 11)).map((result) => {\r\n                                                                return (<Badge  className={(this.state.blackNumbers.includes(Number(result))) ? \"badge-black mx-1\" : (this.state.redNumbers.includes(Number(result))) ? \"badge-red mx-1\" : (Number(result) === 0) ? \"badge-green mx-1\" : \"mx-1\"}>{result}</Badge>)\r\n                                                            })\r\n                                                        }\r\n                                                    </Card.Text>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <InfoModal\r\n                                casino={this.state.selectedCasino}\r\n                                table={this.state.selectedTable}\r\n                                result={this.state.selectedResult}\r\n                                show={this.state.modalShow}\r\n                                onHide={() => this.setModalHide(false)}\r\n                            />\r\n                        </Row>\r\n                    </Tab>\r\n                    <Tab eventKey=\"bet365\" title=\"Bet365\">\r\n                    </Tab>\r\n                    <Tab eventKey=\"roobet\" title=\"RooBet\">\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        filters: state.activeFilter\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(ListResults);\r\n"]},"metadata":{},"sourceType":"module"}